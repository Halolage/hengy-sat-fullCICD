name: CICD for Serverless Application
run-name: ${{ github.actor }} is doing CICD for Serverless Application

on:
  push:
    branches: [ main, "*" ]

jobs:
  pre-deploy: #job name(can be any name,which will appear on the github action page/pipeline)
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job is automatically triggerd by a ${{ github.event_name }} event."
      - name: Get Parameter from System Manager Parameter Store
        run: |
          PARAMETER_VALUE=$(aws ssm get-parameter --name weiheng-parameter --query Parameter.Value --output text)
          echo "Parameter Value: $PARAMETER_VALUE"
        env: 
          AWS_DEFAULT_REGION: ap-southeast-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  install-dependencies:
    runs-on: ubuntu-latest
    needs: pre-deploy
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies command
        run: npm install

  unit-testing:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies command
        run: npm install
      - name: Run unit testing command
        run: npm run test

  vulnerability-scanning:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies command
        run: npm install
      - name: Run vulnerability commandv audit
        run: npm audit
    
  snyk-vulnerability-scan:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Run Snyk vulnerability scan
        run: npx snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - name: Serverless deploy to AWS
        uses: serverless/github-action@master
        with:
          args: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}